{"version":3,"sources":["questions.js","images/quiz.jpg","components/WelcomeScreen.js","components/QuestionCard.js","components/ResultsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["questions","id","text","answers","isRight","WelcomeScreen","amount","startQuiz","className","style","width","src","quiz_img","alt","title","onClick","QuestionCard","question","orderNo","isFirst","isLast","previous","next","getAnswer","display","disabled","map","answer","ResultsScreen","totalQuestions","rightAnswers","wrongAnswers","unAnswered","restart","App","quizStates","useState","quizState","setQuizState","questionIndex","setQuestionIndex","totalRight","setTotalRight","totalWrong","setTotalWrong","isLastQuestion","length","getNextQuestion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e827fc79.chunk.js","sourcesContent":["const questions = [\r\n    {\r\n        id: 1,\r\n        text: \"Which of the following is the capital city of France?\",\r\n        answers: [\r\n            { id: \"1-1\", text: \"Brugges\", isRight: false },\r\n            { id: \"1-2\", text: \"Saint Germain\", isRight: false },\r\n            { id: \"1-3\", text: \"Paris\", isRight: true },\r\n            { id: \"1-4\", text: \"Maryland\", isRight: false },\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"Which of the following was created by Facebook team?\",\r\n        answers: [\r\n            { id: \"2-1\", text: \"Ember.js\", isRight: false },\r\n            { id: \"2-2\", text: \"React.js\", isRight: true },\r\n            { id: \"2-3\", text: \"Vuje.js\", isRight: false },\r\n            { id: \"2-4\", text: \"Angular\", isRight: false },\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        text: \"Which of the following is transparent ?\",\r\n        answers: [\r\n            { id: \"3-1\", text: \"Snow\", isRight: false },\r\n            { id: \"3-2\", text: \"Fanta\", isRight: false },\r\n            { id: \"3-3\", text: \"Coca-Cola\", isRight: false },\r\n            { id: \"3-4\", text: \"Water\", isRight: true },\r\n        ]\r\n    },\r\n]\r\n\r\nexport default questions;","export default __webpack_public_path__ + \"static/media/quiz.3af29538.jpg\";","import React from 'react'\r\nimport quiz_img from '../images/quiz.jpg'\r\n\r\nconst WelcomeScreen = ({amount, startQuiz}) => {\r\n    return (\r\n        <div className = \"card p-3 m-5\" style = {{width: \"60rem\"}}>\r\n            <div className = \"row\">\r\n                <div className = \"col-md-4\">\r\n                    <img src={quiz_img} className=\"img-fluid img-thumbnail\" alt=\"Quiz image\" title = \"Quiz image\"></img>\r\n                </div>\r\n                <div className = \"col-md-8\">\r\n                    <div className = \"card-body\">\r\n                        <h1 className = \"card-title\">Welcome to the Quiz app !</h1>\r\n                        <h3 className = \"card-text\">\r\n                            <small className=\"text-muted\" >{amount} questions total.</small>\r\n                        </h3>\r\n                        <h5 className = \"card-text\">If you are ready, press START.</h5>\r\n                        <button \r\n                            className = \"btn btn-primary\"\r\n                            onClick = {() => startQuiz()}\r\n                        >\r\n                            START\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    header: {\r\n        fontSize: 16\r\n    }\r\n}\r\n\r\nexport default WelcomeScreen\r\n","import React from 'react'\r\n\r\nconst QuestionCard = ({ question, orderNo, isFirst, isLast, previous, next, getAnswer }) => {\r\n    return (\r\n        <div className = \"card m-3\">\r\n            <div className=\"card-header d-flex justify-content-between\">\r\n                <h5 style = {{display: \"inline\"}}>\r\n                    Question # {orderNo}\r\n                </h5>\r\n                <div>\r\n                    <button\r\n                        className = \"btn btn-primary\"\r\n                        disabled={(!isFirst) ? \"\" : \"disabled\"}\r\n                        onClick={() => previous()}\r\n                    >\r\n                        Prev\r\n                    </button>\r\n                    {' '}\r\n                    <button\r\n                        className=\"btn btn-primary\"\r\n                        disabled={(!isLast) ? \"\" : \"disabled\"}\r\n                        onClick={() => next()}\r\n                    >\r\n                        Next\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className = \"card-body\">\r\n                <div className = \"row\">\r\n                    <div className = \"col-md-8\">\r\n                        <h3 className = \"card-title\">{ question.text }</h3>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-4\">\r\n                        <ul className = \"list-group\">\r\n                        {\r\n                            question.answers.map(answer => (\r\n                                <li \r\n                                    className = \"list-group-item\" \r\n                                    key={answer.id}\r\n                                    onClick = {() => getAnswer(answer)}\r\n                                >\r\n                                    {answer.text}\r\n                                </li>\r\n                            ))\r\n                        }\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionCard\r\n\r\n","import React from 'react'\r\n\r\nconst ResultsScreen = ({ totalQuestions, rightAnswers, wrongAnswers, unAnswered, restart }) => {\r\n    return (\r\n        <div className = \"card m-3\">\r\n            <h1 className = \"card-header text-center\">You came to the end of the Quiz !</h1>\r\n            \r\n            <div className = \"card-body\">\r\n                <h3 className=\"card-text\">Thank you for taking part in it.</h3>\r\n\r\n            </div>\r\n\r\n            <div className = \"row m-3 p-3 d-flex justify-content-between\">\r\n                <div className = \"col-sm\">\r\n                    <div className=\"alert alert-secondary justify-content-between d-flex\">\r\n                        Total\r\n                    <span className=\"badge badge-secondary badge-pill align-self-center\">{totalQuestions}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"alert alert-secondary justify-content-between d-flex\">\r\n                        Right\r\n                    <span className=\"badge badge-primary badge-pill align-self-center\">{rightAnswers}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"alert alert-secondary justify-content-between d-flex\">\r\n                        Wrong\r\n                    <span className=\"badge badge-danger badge-pill align-self-center\">{wrongAnswers}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"alert alert-secondary justify-content-between d-flex\">\r\n                        Unanswered\r\n                    <span className=\"badge badge-warning badge-pill align-self-center\">{unAnswered}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className = \"row m-3 align-self-center\">\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => restart()}\r\n                >\r\n                    RESTART\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsScreen\r\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport questions from './questions'\nimport './App.css';\nimport WelcomeScreen from './components/WelcomeScreen'\nimport QuestionCard from './components/QuestionCard'\nimport ResultsScreen from './components/ResultsScreen'\n\nconst App = () => {\n\n  const quizStates = {\n    NOT_STARTED: 0,\n    IN_PROGRESS: 1,\n    ENDED: 2\n  }\n\n  const [quizState, setQuizState] = useState(quizStates.NOT_STARTED)\n  \n  const [questionIndex, setQuestionIndex] = useState(0)\n  const [totalRight, setTotalRight] = useState(0)\n  const [totalWrong, setTotalWrong] = useState(0)\n\n  const startQuiz = () => {\n    setQuizState(quizStates.IN_PROGRESS)\n  }\n\n  const restart = () => {\n    setQuizState(quizStates.NOT_STARTED)\n    setQuestionIndex(0)\n    setTotalRight(0)\n    setTotalWrong(0)\n  }\n\n  const isLastQuestion = () => {\n    return ((questions.length - 1) === questionIndex) ? true : false\n  }\n\n  const isFirstQuestion = () => {\n    return (questionIndex === 0) ? true : false\n  }\n\n  const getNextQuestion = () => {\n    setQuestionIndex((questionIndex) => questionIndex + 1)\n  }\n\n  const getPrevQuestion = () => {\n    setQuestionIndex((questionIndex) => questionIndex - 1)\n  }\n\n  const getAnswer = (answer) => {\n    if (!isLastQuestion()) {\n      getNextQuestion()\n    } else {\n      setQuizState(quizStates.ENDED)\n    }\n\n    if (answer.isRight)\n      setTotalRight((totalRight) => totalRight + 1)\n    else\n      setTotalWrong((totalWrong) => totalWrong + 1)\n  }\n\n  switch(quizState) {\n    case quizStates.NOT_STARTED:\n      return (\n        <WelcomeScreen \n          amount={questions.length} \n          startQuiz = { startQuiz }\n        /> \n      )\n    case quizStates.IN_PROGRESS:\n      return (\n        <QuestionCard\n          orderNo={questionIndex + 1}\n          question={questions[questionIndex]}\n          isLast={isLastQuestion()}\n          isFirst={isFirstQuestion()}\n          previous={getPrevQuestion}\n          next={getNextQuestion}\n          getAnswer={getAnswer}\n        /> \n      )\n    case quizStates.ENDED:\n      return (\n        <ResultsScreen \n          totalQuestions = {questions.length}\n          rightAnswers = { totalRight }\n          wrongAnswers = { totalWrong }\n          unAnswered = { questions.length - totalRight - totalWrong }\n          restart = { restart }\n        />\n      )\n\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}